provider "aws" {
  region     = "us-east-1"
  access_key = "" # Ajoutez votre access key ici
  secret_key = "" # Ajoutez votre secret key ici
}

# Création de l'instance EC2
resource "aws_instance" "Owncloud" {
  ami           = "ami-0c7217cdde317cfec"  # ID de l'AMI Ubuntu 22.04 LTS
  instance_type = "t2.micro"               # Type d'instance
            # Remplacez par votre paire de clés SSH
                                             # Remplacez par l'ID de votre sous-réseau public

  tags = {
    Name = "OwnCloud"
  }
}

resource "null_resource" "docker_installation" {
  depends_on = [aws_instance.Owncloud]

  provisioner "remote-exec" {
    inline = [
      "sudo apt-get update",
      "sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common",
      "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -",
      "sudo add-apt-repository 'deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable'",
      "sudo apt-get update",
      "sudo apt-get install -y docker-ce",
      "sudo systemctl enable docker",
      "sudo systemctl start docker"
    ]

  }
}

resource "aws_instance" "Prometheus-Grafana" {
  ami           = "ami-0c7217cdde317cfec"
  instance_type = "t2.micro"
  #key_name      = "" # Remplacez par votre paire de clés SSH
  tags = {
    Name = "Prometheus-Grafana"
  }

  user_data = <<-EOF
              #!/bin/bash
              sudo apt update -y
              sudo apt install -y wget
              sudo wget "https://s3-eu-west-1.amazonaws.com/grafana-aws-cli/prometheus-install.sh"
              sudo chmod +x prometheus-install.sh
              sudo ./prometheus-install.sh
              EOF
}

# Ouvrir les ports nécessaires dans le groupe de sécurité
resource "aws_security_group" "instance_sg" {
  name        = "instance_sg"
  description = "Security group for EC2 instance"

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 3000
    to_port     = 3000
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}